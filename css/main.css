/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */html{font-family:sans-serif;line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:0.67em 0}figcaption,figure{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}main{display:block}pre{font-family:monospace, monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace, monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button{overflow:visible}button,select{text-transform:none}button,html [type="button"],[type="reset"],[type="submit"]{-webkit-appearance:button}button::-moz-focus-inner,[type="button"]::-moz-focus-inner,[type="reset"]::-moz-focus-inner,[type="submit"]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type="button"]:-moz-focusring,[type="reset"]:-moz-focusring,[type="submit"]:-moz-focusring{outline:1px dotted ButtonText}input{overflow:visible}[type="checkbox"],[type="radio"]{box-sizing:border-box;padding:0}[type="number"]::-webkit-inner-spin-button,[type="number"]::-webkit-outer-spin-button{height:auto}[type="search"]{-webkit-appearance:textfield;outline-offset:-2px}[type="search"]::-webkit-search-cancel-button,[type="search"]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em}legend{box-sizing:border-box;display:table;max-width:100%;padding:0;color:inherit;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}details{display:block}summary{display:list-item}menu{display:block}canvas{display:inline-block}template{display:none}[hidden]{display:none}h1{font-size:2rem;font-weight:700;color:#fff}h3{font-size:1.5rem;font-weight:500;color:#fff}h4{font-size:1rem}p{font-size:0.65rem;color:#fff;font-weight:300;line-height:1}hr{width:3.15rem}.btn{border-radius:0.18rem;border:0.06rem solid #ebebeb;background-color:#fff;margin-left:0.5rem;margin-right:0.5rem;color:#8c8c8c;font-size:0.85rem;font-weight:300}.btn.active,.btn:hover,.btn:active,.btn:focus{background-color:#998675;color:#fff;box-shadow:none}.wraper{width:47.8rem;margin:0 auto}.ov-flow{overflow:hidden}header{background-size:cover;background:url("./../img/header-bg.png") center;padding-top:1rem}header .nav-wrapper{position:relative}header .logo{display:inline-block}header .logo img{max-width:6rem}header nav{display:inline-block;float:right}header nav li{float:left;padding:0.4rem}header nav li a{color:#fff;text-decoration:none;font-size:0.75rem}header nav li a:hover{color:#c7b299;text-decoration:none}header .header-content{text-align:center;min-height:20rem;margin-top:3rem}header .header-content #get-started-link{color:#fff;font-weight:400;line-height:1.4rem;text-transform:uppercase;background-color:#998675;border-radius:0.18rem;box-shadow:inset 0 -0.18rem 0 #736357;padding:0.4rem 0.75rem 0.5rem 0.75rem;font-size:0.75rem}header .header-content #get-started-link:hover{text-decoration:none;background-color:#736357}header .header-content p{margin-bottom:3rem;font-size:1rem;line-height:1.25}header .mobile-menu-wrapper{float:right}header #main-navigation{position:absolute;top:2.18rem;display:none}header #main-navigation.open{display:block;background-color:#191919}header #menuToggle{display:block;float:right;z-index:1;user-select:none}header #menuToggle input{display:block;width:2.5rem;height:2rem;position:absolute;top:-0.43rem;cursor:pointer;opacity:0;z-index:2}header #menuToggle span{display:block;width:2rem;height:0.25rem;margin-bottom:0.3rem;position:relative;background:#cdcdcd;border-radius:0.15rem;transform-origin:0.25rem 0;transition:transform 0.5s cubic-bezier(0.77, 0.2, 0.05, 1),background 0.5s cubic-bezier(0.77, 0.2, 0.05, 1),opacity 0.55s ease}header #menuToggle span:nth-last-child(2){transform-origin:1.25rem 1.25rem}header #menuToggle span:nth-last-child(1){transform-origin:0.6rem -0.6rem}header #menuToggle input:checked ~ span{opacity:1;transform:rotate(45deg) translate(-0.12rem, -0.06rem)}header #menuToggle input:checked ~ span:nth-last-child(3){opacity:0;transform:rotate(0deg) scale(0.2, 0.2)}header #menuToggle input:checked ~ span:nth-last-child(2){transform:rotate(-45deg) translate(0, -0.06rem)}@media (min-width: 575.98px){header p{font-size:0.75rem}}@media (min-width: 768px){header #main-navigation{position:unset}header #main-navigation ul{float:right}header #main-navigation.open{background-color:transparent}}footer{background-color:#191919;padding:2rem 0}footer .branding img{width:100%;max-width:12.5rem}footer .branding p{line-height:1.5;font-size:0.5rem;margin-top:2rem}footer h5{color:#fff;font-size:0.75rem}footer a:hover{text-decoration:none}footer a:hover span{color:#fff}footer a:hover p{color:#c7b299}footer span{font-size:0.5rem;color:#363636;font-weight:300}footer p{color:#555;font-size:0.6rem;font-weight:300;margin-bottom:0}footer hr{border-top-color:#252525;width:auto;margin-top:0.5rem;margin-bottom:0.25rem}footer .instagram-block{overflow:hidden}footer .instagram-block h5{text-transform:uppercase}footer .instagram-block img{max-width:45%}@media (min-width: 768px){footer .instagram-block{overflow:hidden}footer .instagram-block h5{text-align:right}footer .instagram-block img{max-width:45%;float:right}}html{scroll-behavior:smooth}.services-wrapper{padding:2rem 0}.services-wrapper a:hover{text-decoration:none}.services-wrapper a:hover h4,.services-wrapper a:hover p{color:#c7b299}.services-wrapper a:hover hr{border-top-color:#c7b299}.services-wrapper img{width:2.5rem;height:2.5rem}.services-wrapper ul{padding-left:0}.services-wrapper li{text-align:center}.services-wrapper h4{color:#555;margin-top:1rem}.services-wrapper p{color:#8c8c8c;line-height:1.5;font-size:0.8rem}@media (min-width: 768px){.services-wrapper p{font-size:0.5rem}}.projects-wrapper{text-align:center;min-height:31.25rem}.projects-wrapper h3{color:#555;font-weight:400}.projects-wrapper p{color:#8c8c8c;font-weight:300;font-size:0.75rem;line-height:1.5}.projects-wrapper .filter-btn{margin-top:1rem}.projects-wrapper #btn-container{margin-bottom:2rem}.projects-wrapper .filter-item{margin-bottom:1.5rem;overflow:hidden}.projects-wrapper .filter-item .item-image{height:auto;overflow:hidden}.projects-wrapper .filter-item .filter-item-inner-wrapper{margin-left:0.5rem;margin-right:0.5rem}.projects-wrapper .filter-item .filter-item-inner-wrapper::after{position:absolute;top:0;left:0;width:100%;height:100%;display:block;color:#fff}.projects-wrapper .filter-item:hover{text-decoration:none;position:relative}.projects-wrapper .filter-item:hover img{transform:scale(1.5)}.projects-wrapper .filter-item img{width:100%;transition:transform .5s ease}.projects-wrapper .item-content{padding:0.75rem 0.5rem;background-color:#fbfaf8}.projects-wrapper .item-content h4{color:#c7b299;font-weight:500}.projects-wrapper .item-content p{font-weight:300;color:#cdcdcd;font-size:0.75rem}@media (min-width: 575.98px){.projects-wrapper p{font-size:1rem}.projects-wrapper .item-image{height:7.8rem;overflow:hidden}}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
